{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":81888,"databundleVersionId":8893623,"sourceType":"competition"}],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-06-22T09:22:57.128712Z","iopub.execute_input":"2024-06-22T09:22:57.129208Z","iopub.status.idle":"2024-06-22T09:22:57.138344Z","shell.execute_reply.started":"2024-06-22T09:22:57.129174Z","shell.execute_reply":"2024-06-22T09:22:57.137223Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"daily_data=pd.read_csv(\"/kaggle/input/predicta-1-0-predict-the-unpredictable-part-2/daily_data.csv\")\nsubmission=pd.read_csv(\"/kaggle/input/predicta-1-0-predict-the-unpredictable-part-2/submission.csv\")\n","metadata":{"execution":{"iopub.status.busy":"2024-06-22T09:22:57.140539Z","iopub.execute_input":"2024-06-22T09:22:57.141453Z","iopub.status.idle":"2024-06-22T09:22:57.164404Z","shell.execute_reply.started":"2024-06-22T09:22:57.141413Z","shell.execute_reply":"2024-06-22T09:22:57.163446Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Data description And cleaning","metadata":{}},{"cell_type":"code","source":"daily_data.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-06-22T09:22:57.165587Z","iopub.execute_input":"2024-06-22T09:22:57.165908Z","iopub.status.idle":"2024-06-22T09:22:57.174957Z","shell.execute_reply.started":"2024-06-22T09:22:57.165881Z","shell.execute_reply":"2024-06-22T09:22:57.173983Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"daily_data.shape","metadata":{"execution":{"iopub.status.busy":"2024-06-22T09:22:57.178077Z","iopub.execute_input":"2024-06-22T09:22:57.178488Z","iopub.status.idle":"2024-06-22T09:22:57.187321Z","shell.execute_reply.started":"2024-06-22T09:22:57.178449Z","shell.execute_reply":"2024-06-22T09:22:57.186167Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"daily_data.duplicated()","metadata":{"execution":{"iopub.status.busy":"2024-06-22T09:22:57.188567Z","iopub.execute_input":"2024-06-22T09:22:57.188956Z","iopub.status.idle":"2024-06-22T09:22:57.204117Z","shell.execute_reply.started":"2024-06-22T09:22:57.188914Z","shell.execute_reply":"2024-06-22T09:22:57.203078Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#there are no missing values and duplicate values except \"condition_text\"","metadata":{"execution":{"iopub.status.busy":"2024-06-22T09:22:57.205407Z","iopub.execute_input":"2024-06-22T09:22:57.205773Z","iopub.status.idle":"2024-06-22T09:22:57.210222Z","shell.execute_reply.started":"2024-06-22T09:22:57.205744Z","shell.execute_reply":"2024-06-22T09:22:57.209233Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"daily_data.describe()","metadata":{"execution":{"iopub.status.busy":"2024-06-22T09:22:57.211565Z","iopub.execute_input":"2024-06-22T09:22:57.211887Z","iopub.status.idle":"2024-06-22T09:22:57.256868Z","shell.execute_reply.started":"2024-06-22T09:22:57.211859Z","shell.execute_reply":"2024-06-22T09:22:57.255861Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Visualization of variables ","metadata":{}},{"cell_type":"code","source":"#box plot for numerical varibales\nimport matplotlib.pyplot as plt\nfig=plt.figure(figsize=(15,20))\nax=fig.gca()\ndaily_data.plot(ax=ax, kind=\"box\", subplots=True, layout=(6,4), sharex=False)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-22T09:22:57.258187Z","iopub.execute_input":"2024-06-22T09:22:57.258510Z","iopub.status.idle":"2024-06-22T09:22:59.511622Z","shell.execute_reply.started":"2024-06-22T09:22:57.258481Z","shell.execute_reply":"2024-06-22T09:22:59.510556Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Distribution for numerical variables\nimport seaborn as sns\nplt.figure(figsize=(10, 6))\nsns.histplot(daily_data['temperature_celsius'], kde=True,bins=30)\nplt.title('Temperature Distribution')\nplt.xlabel('Temperature (Celsius)')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-22T09:22:59.512906Z","iopub.execute_input":"2024-06-22T09:22:59.513241Z","iopub.status.idle":"2024-06-22T09:22:59.894149Z","shell.execute_reply.started":"2024-06-22T09:22:59.513213Z","shell.execute_reply":"2024-06-22T09:22:59.893047Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import seaborn as sns\nplt.figure(figsize=(10, 6))\nsns.histplot(daily_data['wind_kph'], kde=True,bins=30)\nplt.title('wind_kph')\nplt.xlabel('wind_kph')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-22T09:22:59.897512Z","iopub.execute_input":"2024-06-22T09:22:59.897852Z","iopub.status.idle":"2024-06-22T09:23:00.295126Z","shell.execute_reply.started":"2024-06-22T09:22:59.897824Z","shell.execute_reply":"2024-06-22T09:23:00.294016Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import seaborn as sns\nplt.figure(figsize=(10, 6))\nsns.histplot(daily_data['wind_degree'], kde=True,bins=30)\nplt.title('wind_degree')\nplt.xlabel('wind_degree')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-22T09:23:00.296596Z","iopub.execute_input":"2024-06-22T09:23:00.297039Z","iopub.status.idle":"2024-06-22T09:23:00.664927Z","shell.execute_reply.started":"2024-06-22T09:23:00.297002Z","shell.execute_reply":"2024-06-22T09:23:00.663862Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import seaborn as sns\nplt.figure(figsize=(10, 6))\nsns.histplot(daily_data['pressure_mb'], kde=True,bins=30)\nplt.title('pressure_mb')\nplt.xlabel('pressure_mb')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-22T09:23:00.666310Z","iopub.execute_input":"2024-06-22T09:23:00.666626Z","iopub.status.idle":"2024-06-22T09:23:01.022083Z","shell.execute_reply.started":"2024-06-22T09:23:00.666600Z","shell.execute_reply":"2024-06-22T09:23:01.020802Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import seaborn as sns\nplt.figure(figsize=(10, 6))\nsns.histplot(daily_data['precip_mm'], kde=True,bins=30)\nplt.title('precip_mm')\nplt.xlabel('precip_mm')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-22T09:23:01.023409Z","iopub.execute_input":"2024-06-22T09:23:01.023754Z","iopub.status.idle":"2024-06-22T09:23:01.400138Z","shell.execute_reply.started":"2024-06-22T09:23:01.023709Z","shell.execute_reply":"2024-06-22T09:23:01.399062Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import seaborn as sns\nplt.figure(figsize=(10, 6))\nsns.histplot(daily_data['humidity'], kde=True,bins=30)\nplt.title('humidity')\nplt.xlabel('humidity')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-22T09:23:01.401323Z","iopub.execute_input":"2024-06-22T09:23:01.401634Z","iopub.status.idle":"2024-06-22T09:23:01.779050Z","shell.execute_reply.started":"2024-06-22T09:23:01.401608Z","shell.execute_reply":"2024-06-22T09:23:01.777956Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"daily_data1=daily_data.copy()","metadata":{"execution":{"iopub.status.busy":"2024-06-22T09:23:01.780311Z","iopub.execute_input":"2024-06-22T09:23:01.780604Z","iopub.status.idle":"2024-06-22T09:23:01.786480Z","shell.execute_reply.started":"2024-06-22T09:23:01.780580Z","shell.execute_reply":"2024-06-22T09:23:01.785414Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"daily_data1.drop(['day_id', 'city_id', 'sunrise', 'sunset','condition_text'],axis=1, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-06-22T09:23:01.787958Z","iopub.execute_input":"2024-06-22T09:23:01.788914Z","iopub.status.idle":"2024-06-22T09:23:01.798795Z","shell.execute_reply.started":"2024-06-22T09:23:01.788876Z","shell.execute_reply":"2024-06-22T09:23:01.797703Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import seaborn as sbn\nfig=plt.figure(figsize=(8,8))\nax=fig.gca()\ncorrelations=daily_data1.corr(method=\"pearson\")\nsbn.heatmap(correlations, annot=True, ax=ax)\n\n","metadata":{"execution":{"iopub.status.busy":"2024-06-22T09:23:01.800299Z","iopub.execute_input":"2024-06-22T09:23:01.800776Z","iopub.status.idle":"2024-06-22T09:23:02.633851Z","shell.execute_reply.started":"2024-06-22T09:23:01.800715Z","shell.execute_reply":"2024-06-22T09:23:02.632644Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# data preprocessing","metadata":{}},{"cell_type":"code","source":"# Convert sunrise and sunset times into numerical features.\nfrom datetime import datetime\n\ndef time_to_minutes(time_str):\n    time_obj = datetime.strptime(time_str, '%I:%M %p')\n    return time_obj.hour * 60 + time_obj.minute\ndaily_data['sunrise_minutes'] = daily_data['sunrise'].apply(time_to_minutes)\ndaily_data['sunset_minutes'] = daily_data['sunset'].apply(time_to_minutes)\ndaily_data\n","metadata":{"execution":{"iopub.status.busy":"2024-06-22T09:23:02.635429Z","iopub.execute_input":"2024-06-22T09:23:02.636402Z","iopub.status.idle":"2024-06-22T09:23:02.729887Z","shell.execute_reply.started":"2024-06-22T09:23:02.636361Z","shell.execute_reply":"2024-06-22T09:23:02.728603Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#drop unnecessary columns\ndaily_data = daily_data.drop(columns=['sunrise', 'sunset'])\n","metadata":{"execution":{"iopub.status.busy":"2024-06-22T09:23:23.158970Z","iopub.execute_input":"2024-06-22T09:23:23.159902Z","iopub.status.idle":"2024-06-22T09:23:23.165409Z","shell.execute_reply.started":"2024-06-22T09:23:23.159867Z","shell.execute_reply":"2024-06-22T09:23:23.164395Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"daily_data['city_id'] = daily_data['city_id'].astype('category').cat.codes\ndaily_data.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-22T09:23:36.468637Z","iopub.execute_input":"2024-06-22T09:23:36.469050Z","iopub.status.idle":"2024-06-22T09:23:36.492768Z","shell.execute_reply.started":"2024-06-22T09:23:36.469016Z","shell.execute_reply":"2024-06-22T09:23:36.491684Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import classification_report\n\nknown_conditions = daily_data[daily_data['condition_text'].notnull()]\nunknown_conditions = daily_data[daily_data['condition_text'].isnull()]\n\n","metadata":{"execution":{"iopub.status.busy":"2024-06-22T09:25:50.855321Z","iopub.execute_input":"2024-06-22T09:25:50.855731Z","iopub.status.idle":"2024-06-22T09:25:50.865105Z","shell.execute_reply.started":"2024-06-22T09:25:50.855698Z","shell.execute_reply":"2024-06-22T09:25:50.864015Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#ENCODE the conditon text labels\nlabel_encoder = LabelEncoder()\narray=known_conditions['condition_text'].values\nlabel_encoder.fit(array.ravel())\narray_encoded=label_encoder.transform(array)\nknown_conditions['condition_text_encoded']=array_encoded\nknown_conditions","metadata":{"execution":{"iopub.status.busy":"2024-06-22T09:26:00.879288Z","iopub.execute_input":"2024-06-22T09:26:00.879803Z","iopub.status.idle":"2024-06-22T09:26:00.913827Z","shell.execute_reply.started":"2024-06-22T09:26:00.879758Z","shell.execute_reply":"2024-06-22T09:26:00.912585Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"known_conditions['condition_text_encoded'].unique()\n","metadata":{"execution":{"iopub.status.busy":"2024-06-22T09:26:14.046941Z","iopub.execute_input":"2024-06-22T09:26:14.047911Z","iopub.status.idle":"2024-06-22T09:26:14.055334Z","shell.execute_reply.started":"2024-06-22T09:26:14.047872Z","shell.execute_reply":"2024-06-22T09:26:14.054292Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#split features and target\nfeatures = known_conditions.drop(columns=['day_id', 'condition_text', 'condition_text_encoded'])\ntarget = known_conditions['condition_text_encoded']\n\n","metadata":{"execution":{"iopub.status.busy":"2024-06-22T09:26:28.477268Z","iopub.execute_input":"2024-06-22T09:26:28.478168Z","iopub.status.idle":"2024-06-22T09:26:28.485394Z","shell.execute_reply.started":"2024-06-22T09:26:28.478127Z","shell.execute_reply":"2024-06-22T09:26:28.484209Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#droping highly correlated column 'feels_like_temperature'\nfeatures_reduced = features.drop(columns=['feels_like_celsius','cloud'])\n","metadata":{"execution":{"iopub.status.busy":"2024-06-22T09:26:42.647904Z","iopub.execute_input":"2024-06-22T09:26:42.648647Z","iopub.status.idle":"2024-06-22T09:26:42.654320Z","shell.execute_reply.started":"2024-06-22T09:26:42.648602Z","shell.execute_reply":"2024-06-22T09:26:42.653265Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#split train and test sets\nx_train, x_test, y_train, y_test = train_test_split(features_reduced, target, test_size=0.2, random_state=42)\n","metadata":{"execution":{"iopub.status.busy":"2024-06-22T09:26:57.232112Z","iopub.execute_input":"2024-06-22T09:26:57.232473Z","iopub.status.idle":"2024-06-22T09:26:57.240092Z","shell.execute_reply.started":"2024-06-22T09:26:57.232446Z","shell.execute_reply":"2024-06-22T09:26:57.239105Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Model Training\n","metadata":{}},{"cell_type":"code","source":"rf_classifier=RandomForestClassifier(n_estimators=100, random_state=42)\nrf_classifier.fit(x_train, y_train)\nconditon_prediction=rf_classifier.predict(x_test)\nclassification= classification_report(y_test, conditon_prediction, target_names=label_encoder.classes_)\nprint(classification)","metadata":{"execution":{"iopub.status.busy":"2024-06-22T09:27:20.734985Z","iopub.execute_input":"2024-06-22T09:27:20.735400Z","iopub.status.idle":"2024-06-22T09:27:20.982394Z","shell.execute_reply.started":"2024-06-22T09:27:20.735369Z","shell.execute_reply":"2024-06-22T09:27:20.981404Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Model Evaluation\n","metadata":{}},{"cell_type":"code","source":"unknown_features_reduced = unknown_conditions.drop(columns=['day_id', 'condition_text', 'feels_like_celsius', 'cloud'])\npredicted_conditions_encoded = rf_classifier.predict(unknown_features_reduced)\n\npredicted_conditions = label_encoder.inverse_transform(predicted_conditions_encoded)\n\n","metadata":{"execution":{"iopub.status.busy":"2024-06-22T09:27:40.934763Z","iopub.execute_input":"2024-06-22T09:27:40.935830Z","iopub.status.idle":"2024-06-22T09:27:40.984194Z","shell.execute_reply.started":"2024-06-22T09:27:40.935791Z","shell.execute_reply":"2024-06-22T09:27:40.982878Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"submission_filtered = submission[submission['day_id'].isin(unknown_conditions['day_id'])].copy()\nsubmission_filtered['condition_text'] = predicted_conditions\nfinal_submission  =submission.merge(submission_filtered[['day_id', 'condition_text']], on='day_id', how='left', suffixes=('', '_predicted'))\nfinal_submission ['condition_text'] = final_submission['condition_text_predicted'].combine_first(final_submission['condition_text'])\nfinal_submission  = final_submission .drop(columns=['condition_text_predicted'])\nprint(final_submission)\n\n","metadata":{"execution":{"iopub.status.busy":"2024-06-22T09:27:49.146526Z","iopub.execute_input":"2024-06-22T09:27:49.146946Z","iopub.status.idle":"2024-06-22T09:27:49.164875Z","shell.execute_reply.started":"2024-06-22T09:27:49.146895Z","shell.execute_reply":"2024-06-22T09:27:49.163842Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"final_submission.to_csv('/kaggle/working/your_submission.csv',index=False)\n","metadata":{"execution":{"iopub.status.busy":"2024-06-22T09:28:02.904586Z","iopub.execute_input":"2024-06-22T09:28:02.905011Z","iopub.status.idle":"2024-06-22T09:28:02.914952Z","shell.execute_reply.started":"2024-06-22T09:28:02.904978Z","shell.execute_reply":"2024-06-22T09:28:02.913929Z"},"trusted":true},"execution_count":null,"outputs":[]}]}